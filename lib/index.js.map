{"version":3,"sources":["webpack://stocache/webpack/universalModuleDefinition","webpack://stocache/./src/index.js","webpack://stocache/webpack/bootstrap","webpack://stocache/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","this","config","support","key","localStorage","setItem","JSON","stringify","parse","getItem","e","scope","exception","generator","value","code","i","length","charCodeAt","Math","abs","name","message","json","encode","fallback","decode","storage","set","retry","unset","removeItem","get","middleware","now","floor","Date","keys","shadow","context","has","keep","ttl","condition","parseInt","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"stocache\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"stocache\"] = factory();\n\telse\n\t\troot[\"stocache\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","const config = {\r\n    scope: 'stocache',\r\n    ttl: 3600,\r\n    exception: false,\r\n}\r\n\r\nconst support = ((key) => {\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(true))\r\n        return JSON.parse(localStorage.getItem(key))\r\n    } catch (e) {\r\n        return false\r\n    }\r\n})(config.scope + '-' + 'support')\r\n\r\nconst Stocache = (scope = config.scope, exception = config.exception) => {\r\n    const generator = (scope) => ({\r\n        key: (value = scope) => {\r\n            let code = 0\r\n            for (let i = 0; i < value.length; i++) {\r\n                code = (code << 5) - code + value.charCodeAt(i)\r\n                code = code & code\r\n            }\r\n            return scope + '-' + (code > 0 ? code : 'i' + Math.abs(code))\r\n        },\r\n        exception: (name = null, message = null) => ({\r\n            scope,\r\n            name,\r\n            message,\r\n        }),\r\n    })\r\n\r\n    const json = (value) => ({\r\n        encode: (fallback = '') => {\r\n            try {\r\n                return JSON.stringify(value)\r\n            } catch ({ message }) {\r\n                if (exception) throw generator(scope).exception('json.encode', message)\r\n                return fallback\r\n            }\r\n        },\r\n        decode: (fallback = {}) => {\r\n            try {\r\n                return JSON.parse(value)\r\n            } catch ({ message }) {\r\n                if (exception) throw generator(scope).exception('json.decode', message)\r\n                return fallback\r\n            }\r\n        },\r\n    })\r\n\r\n    const storage = (key = scope) => ({\r\n        set: (value = null, retry = false) => {\r\n            try {\r\n                localStorage.setItem(key, json(value).encode())\r\n                return true\r\n            } catch ({ message }) {\r\n                if (exception) throw generator(scope).exception('storage.set', message)\r\n                return false\r\n            }\r\n        },\r\n        unset: () => {\r\n            try {\r\n                localStorage.removeItem(key)\r\n                return true\r\n            } catch ({ message }) {\r\n                if (exception) throw generator(scope).exception('storage.unset', message)\r\n                return false\r\n            }\r\n        },\r\n        get: (fallback = false) => {\r\n            return json(localStorage.getItem(key)).decode(fallback)\r\n        },\r\n    })\r\n\r\n    const middleware = (key, now = Math.floor(Date.now() / 1000)) => {\r\n        let keys = {\r\n            shadow: generator(scope).key(),\r\n            storage: generator(scope).key(key),\r\n        }\r\n        let context = storage(keys.shadow).get() || {}\r\n\r\n        const set = (value, ttl) => {\r\n            if (support) {\r\n                if (scope !== key) {\r\n                    if (storage(keys.storage).set(value, true)) {\r\n                        return keep(ttl, true)\r\n                    }\r\n                } else {\r\n                    if (exception) throw generator(scope).exception('middleware.set', 'KeyConflict')\r\n                }\r\n            }\r\n            return false\r\n        }\r\n\r\n        const unset = () => {\r\n            if (support) {\r\n                delete context[keys.storage]\r\n                return storage(keys.storage).unset() && storage(keys.shadow).set(context)\r\n            }\r\n            return false\r\n        }\r\n\r\n        const has = () => {\r\n            if (support && context[keys.storage]) {\r\n                if (context[keys.storage] >= now) {\r\n                    return true\r\n                } else {\r\n                    unset()\r\n                }\r\n            }\r\n            return false\r\n        }\r\n\r\n        const keep = (ttl, condition = has(keys.storage)) => {\r\n            if (support && condition) {\r\n                context[keys.storage] = now + parseInt(ttl)\r\n                return storage(keys.shadow).set(context)\r\n            }\r\n            return false\r\n        }\r\n\r\n        const get = (fallback) => {\r\n            if (support && has(keys.storage)) {\r\n                return storage(keys.storage).get(fallback)\r\n            }\r\n            return fallback\r\n        }\r\n\r\n        return { set, unset, has, keep, get }\r\n    }\r\n\r\n    return {\r\n        support,\r\n        key: (key = config.scope) => generator(scope).key(key),\r\n        set: (key = null, value = null, ttl = config.ttl) => middleware(key).set(value, ttl),\r\n        unset: (key = null) => middleware(key).unset(),\r\n        has: (key = null) => middleware(key).has(),\r\n        keep: (key = null, ttl = config.ttl) => middleware(key).keep(ttl),\r\n        get: (key = null, fallback = false) => middleware(key).get(fallback),\r\n    }\r\n}\r\n\r\nexport default Stocache\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(579);\n"],"sourceRoot":""}