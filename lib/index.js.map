{"version":3,"sources":["webpack://stocache/webpack/universalModuleDefinition","webpack://stocache/./src/index.js","webpack://stocache/webpack/bootstrap","webpack://stocache/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","this","config","support","key","window","setItem","JSON","stringify","parse","getItem","e","scope","storageType","exception","localStorage","generator","value","input","code","i","length","charCodeAt","Math","abs","name","message","json","encode","fallback","decode","storage","set","unset","removeItem","get","middleware","now","floor","Date","keys","shadow","context","object","remove","add","commit","keep","ttl","condition","has","parseInt","clean","flush","expireSoon","changed","expireSoonKey","expireSoonKTime","Object","closestItem","writed","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"stocache\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"stocache\"] = factory();\n\telse\n\t\troot[\"stocache\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","const config = {\r\n    scope: 'stocache',\r\n    ttl: 3600,\r\n    exception: false,\r\n    storageType: 'localStorage',\r\n}\r\n\r\nconst support = ((key) => {\r\n    try {\r\n        window[config.storageType].setItem(key, JSON.stringify(true))\r\n        return JSON.parse(window[config.storageType].getItem(key))\r\n    } catch (e) {\r\n        return false\r\n    }\r\n})(config.scope + '-' + 'support')\r\n\r\nconst Stocache = (scope = config.scope, storageType = config.storageType, exception = config.exception) => {\r\n    storageType = storageType == 'localStorage' || localStorage == 'sessionStorage' ? storageType : config.storageType\r\n\r\n    const generator = (scope) => {\r\n        const key = (value = scope) => {\r\n            let input = value === null ? scope : value\r\n            let code = 0\r\n            for (let i = 0; i < input.length; i++) {\r\n                code = (code << 5) - code + input.charCodeAt(i)\r\n                code = code & code\r\n            }\r\n            return scope + '-' + (code > 0 ? code : 'i' + Math.abs(code))\r\n        }\r\n\r\n        const exception = (name = null, message = null) => {\r\n            return {\r\n                scope,\r\n                name,\r\n                message,\r\n            }\r\n        }\r\n\r\n        return { key, exception }\r\n    }\r\n\r\n    const json = (value) => {\r\n        const encode = (fallback = '') => {\r\n            try {\r\n                return JSON.stringify(value)\r\n            } catch ({ message }) {\r\n                if (exception) throw generator(scope).exception('json.encode', message)\r\n                return fallback\r\n            }\r\n        }\r\n\r\n        const decode = (fallback = {}) => {\r\n            try {\r\n                return JSON.parse(value)\r\n            } catch ({ message }) {\r\n                if (exception) throw generator(scope).exception('json.decode', message)\r\n                return fallback\r\n            }\r\n        }\r\n\r\n        return { encode, decode }\r\n    }\r\n\r\n    const storage = (key = scope) => {\r\n        const set = (value = null) => {\r\n            try {\r\n                window[storageType].setItem(key, json(value).encode())\r\n                return true\r\n            } catch ({ message }) {\r\n                if (exception) throw generator(scope).exception('storage.set', message)\r\n                return false\r\n            }\r\n        }\r\n\r\n        const unset = () => {\r\n            try {\r\n                window[storageType].removeItem(key)\r\n                return true\r\n            } catch ({ message }) {\r\n                if (exception) throw generator(scope).exception('storage.unset', message)\r\n                return false\r\n            }\r\n        }\r\n\r\n        const get = (fallback = false) => {\r\n            return json(window[storageType].getItem(key)).decode(fallback)\r\n        }\r\n\r\n        return { set, unset, get }\r\n    }\r\n\r\n    const middleware = (key = scope, now = Math.floor(Date.now() / 1000)) => {\r\n        let keys = {\r\n            shadow: generator(scope).key(),\r\n            storage: generator(scope).key(key),\r\n        }\r\n\r\n        let context = {\r\n            object: storage(keys.shadow).get() || {},\r\n            remove: (key) => {\r\n                delete context.object[key]\r\n                return true\r\n            },\r\n            add: (key, value) => {\r\n                context.object[key] = value\r\n                return true\r\n            },\r\n        }\r\n\r\n        const commit = () => {\r\n            if (support) {\r\n                return storage(keys.shadow).set(context.object)\r\n            }\r\n            return false\r\n        }\r\n\r\n        const unset = (key = keys.storage) => {\r\n            if (support) {\r\n                return context.remove(key) && commit() && storage(key).unset()\r\n            }\r\n            return false\r\n        }\r\n\r\n        const keep = (ttl, condition = has(keys.storage)) => {\r\n            if (support && condition) {\r\n                return context.add(keys.storage, now + parseInt(ttl)) && commit()\r\n            }\r\n            return false\r\n        }\r\n\r\n        const has = (key = keys.storage) => {\r\n            if (clean() && context.object[key]) {\r\n                return context.object[key] - now\r\n            }\r\n            return false\r\n        }\r\n\r\n        const get = (fallback) => {\r\n            if (has(keys.storage)) {\r\n                return storage(keys.storage).get(fallback)\r\n            } else {\r\n                return fallback\r\n            }\r\n        }\r\n\r\n        const clean = (flush = false, expireSoon = false) => {\r\n            let changed = false\r\n            let expireSoonKey = null\r\n            let expireSoonKTime = 0\r\n            for (let key of Object.keys(context.object)) {\r\n                if (flush || context.object[key] < now) {\r\n                    changed = true\r\n                    context.remove(key)\r\n                    storage(key).unset()\r\n                } else if (expireSoon && (expireSoonKTime === 0 || closestItem.value > context.object[key])) {\r\n                    changed = true\r\n                    expireSoonKey = key\r\n                    expireSoonKTime = context.object[key]\r\n                }\r\n            }\r\n            return changed ? unset(expireSoonKey) : true\r\n        }\r\n\r\n        const set = (value, ttl) => {\r\n            if (support) {\r\n                if (scope === key) {\r\n                    if (exception) throw generator(scope).exception('middleware.set', 'KeyConflict')\r\n                } else {\r\n                    let writed = storage(keys.storage).set(value)\r\n                    if (!writed) {\r\n                        clean()\r\n                        writed = storage(keys.storage).set(value)\r\n                    }\r\n                    if (!writed) {\r\n                        clean(false, true)\r\n                        writed = storage(keys.storage).set(value)\r\n                    }\r\n                    if (!writed) {\r\n                        clean(true)\r\n                        writed = storage(keys.storage).set(value)\r\n                    }\r\n                    return writed ? keep(ttl, true) : false\r\n                }\r\n            }\r\n            return false\r\n        }\r\n\r\n        return { set, unset, has, keep, get }\r\n    }\r\n\r\n    return {\r\n        set: (key = null, value = null, ttl = config.ttl) => middleware(key).set(value, ttl),\r\n        unset: (key = null) => middleware(key).unset(),\r\n        has: (key = null) => middleware(key).has(),\r\n        keep: (key = null, ttl = config.ttl) => middleware(key).keep(ttl),\r\n        get: (key = null, fallback = false) => middleware(key).get(fallback),\r\n        flush: (scope = config.scope) => middleware(scope).clean(true),\r\n    }\r\n}\r\n\r\nexport default Stocache\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(579);\n"],"sourceRoot":""}